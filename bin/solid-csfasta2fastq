#!/usr/bin/env python

from optparse import OptionParser
import os,sys

from SeqTools import solid
from SeqTools.solid import convert

if __name__ == '__main__':
    usage = "usage: %prog [options] CSFASTA [QUAL]\n\n" \
            "Converts SOLiD *.csfasta (and optional *.qual) files to FASTQ\n" \
            "The result is sent to STDOUT"
    parser = OptionParser(usage=usage)
    parser.add_option("-b", "--basespace", dest="basespace", default=False,
                      action="store_true",
                      help="Convert the sequence to basespace")
    parser.add_option("-q", "--quality-type", dest="quality_type",
                      default='sanger')
    parser.add_option("-d", "--default-quality", dest="quality_default",
                      default="B")
    
    (options,args) = parser.parse_args()
    
    csfasta, csqual = None, None
    if len(args) == 0:
        parser.error("Path to csfasta file required")
    csfasta = args[0]
    if (len(args)) > 1:
        csqual = args[1]
    if len(args) > 2:
        parser.error("Only two arguments accepted")
    
    if not os.path.isfile(csfasta):
        parser.error("FASTA file can not be read")
    if csqual is not None and not os.path.isfile(csqual):
        parser.error("Cannot read quality file")
    
    for idx,read in enumerate(solid.parse(csfasta, csqual)):
        sequence = read.sequence
        quality = read.quality
        if options.basespace:
            sequence = convert.colorspace_to_basespace(sequence)
        if quality is None:
            quality = options.default * len(read)
        else:
            ## Check quality_type -- assume sanger
            quality = convert.quality_to_sanger(quality, as_ascii=True)
        sys.stdout.write("@%s\n%s\n+\n%s\n" % (read.id, sequence, quality)
    
